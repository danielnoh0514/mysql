SELECT 
	MAX(invoice_total) AS Highest,
    Min(invoice_total) AS Lowest,
    AVG(invoice_total) AS Average,
    SUM(invoice_total) AS Total, -- SUM(invoice_total * 1.1) -> multiplies 1.1 with each num then finds SUM
    COUNT(DISTINCT client_id) AS num, -- only counts non null values. DISTINCT ignores duplicate info
    COUNT(*) AS total_records
FROM invoices 
WHERE invoice_date > '2019-07-01'


SELECT 
	'First half of 2019' AS data_range,
    SUM(invoice_total) AS total_sales,
    SUM(payment_total) AS total_payments,
    SUM(invoice_total - payment_total) AS what_we_expect
FROM invoices
WHERE invoice_date < '2019-07-01' -- or use invoice date BETWEEN '2019-01-01' AND '2019-06-30'
UNION
	SELECT 
	'Second half of 2019' AS data_range,
    SUM(invoice_total) AS total_sales,
    SUM(payment_total) AS total_payments,
    SUM(invoice_total - payment_total) AS what_we_expect
FROM invoices
WHERE invoice_date > '2019-07-01'
UNION
SELECT 
	'Total' AS data_range,
    SUM(invoice_total) AS total_sales,
    SUM(payment_total) AS total_payments,
    SUM(invoice_total - payment_total) AS what_we_expect
FROM invoices

